/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.24
 * Generated at: 2024-09-10 15:52:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.web;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("	integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<section class=\"vh-100\" style=\"background-color: #eee;\">\r\n");
      out.write("		<div class=\"container h-100\">\r\n");
      out.write("			<div\r\n");
      out.write("				class=\"row d-flex justify-content-center align-items-center h-100\">\r\n");
      out.write("				<div class=\"col-lg-12 col-xl-11\">\r\n");
      out.write("					<div class=\"card text-black\" style=\"border-radius: 25px;\">\r\n");
      out.write("						<div class=\"card-body p-md-5\">\r\n");
      out.write("							<div class=\"row justify-content-center\">\r\n");
      out.write("								<div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\r\n");
      out.write("\r\n");
      out.write("									<p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign\r\n");
      out.write("										up</p>\r\n");
      out.write("\r\n");
      out.write("									<form class=\"mx-1 mx-md-4\">\r\n");
      out.write("\r\n");
      out.write("										<div class=\"d-flex flex-row align-items-center mb-4\">\r\n");
      out.write("											<i class=\"fas fa-user fa-lg me-3 fa-fw\"></i>\r\n");
      out.write("											<div data-mdb-input-init class=\"form-outline flex-fill mb-0\">\r\n");
      out.write("												<input type=\"text\" name =\"username\" id=\"username\" class=\"form-control\" />\r\n");
      out.write("												<label class=\"form-label\" for=\"username\">Your\r\n");
      out.write("													Username</label>\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										<div class=\"d-flex flex-row align-items-center mb-4\">\r\n");
      out.write("											<i class=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\r\n");
      out.write("											<div data-mdb-input-init class=\"form-outline flex-fill mb-0\">\r\n");
      out.write("												<input type=\"text\" name=\"email\" id=\"email\" class=\"form-control\" />\r\n");
      out.write("												<label class=\"form-label\" for=\"email\">Your\r\n");
      out.write("													Email</label>\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										<div class=\"d-flex flex-row align-items-center mb-4\">\r\n");
      out.write("											<i class=\"fas fa-lock fa-lg me-3 fa-fw\"></i>\r\n");
      out.write("											<div data-mdb-input-init class=\"form-outline flex-fill mb-0\">\r\n");
      out.write("												<input type=\"password\" name=\"password\" id=\"password\"\r\n");
      out.write("													class=\"form-control\" /> <label class=\"form-label\"\r\n");
      out.write("													for=\"password\">Password</label>\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										<div class=\"d-flex flex-row align-items-center mb-4\">\r\n");
      out.write("											<i class=\"fas fa-key fa-lg me-3 fa-fw\"></i>\r\n");
      out.write("											<div data-mdb-input-init class=\"form-outline flex-fill mb-0\">\r\n");
      out.write("												<input type=\"text\" name=\"fullname\" id=\"fullname\"\r\n");
      out.write("													class=\"form-control\" /> <label class=\"form-label\"\r\n");
      out.write("													for=\"fullname\">Your Fullname</label>\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("										\r\n");
      out.write("										<div class=\"d-flex flex-row align-items-center mb-4\">\r\n");
      out.write("											<i class=\"fas fa-lock fa-lg me-3 fa-fw\"></i>\r\n");
      out.write("											<div data-mdb-input-init class=\"form-outline flex-fill mb-0\">\r\n");
      out.write("												<input type=\"text\" name=\"phone\" id=\"phone\"\r\n");
      out.write("													class=\"form-control\" /> <label class=\"form-label\"\r\n");
      out.write("													for=\"phone\">Your Phonenumber</label>\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										<div class=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\r\n");
      out.write("											<button type=\"button\" data-mdb-button-init\r\n");
      out.write("												data-mdb-ripple-init class=\"btn btn-primary btn-lg\">Register</button>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("									</form>\r\n");
      out.write("\r\n");
      out.write("								</div>\r\n");
      out.write("								<div\r\n");
      out.write("									class=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\r\n");
      out.write("\r\n");
      out.write("									<img\r\n");
      out.write("										src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\r\n");
      out.write("										class=\"img-fluid\" alt=\"Sample image\">\r\n");
      out.write("\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
